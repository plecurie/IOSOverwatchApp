'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = srv;

var _express = require('express');

var _express2 = _interopRequireDefault(_express);

var _morgan = require('morgan');

var _morgan2 = _interopRequireDefault(_morgan);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var _cors = require('./cors');

var _cors2 = _interopRequireDefault(_cors);

var _middleware = require('./middleware');

var _middleware2 = _interopRequireDefault(_middleware);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function srv(fn, opt) {
  // Express app.
  var app = (0, _express2.default)();

  // Hook in middleware if provided export.
  if (fn) (0, _middleware2.default)(fn.middleware, app);

  // Winston logging.
  var log = (0, _logger2.default)(opt.logging);
  app.use((0, _morgan2.default)('combined', { stream: log.stream }));
  app.log = log.logger; // Add to express app context.

  // CORS rules.
  var origin = (0, _cors2.default)(opt.cors);
  app.use(origin.cors);

  // Base routes.
  app.get('/health-check', function (req, res) {
    res.send('HTTP OK');
  });

  // Static Documentation.
  app.use('/docs', _express2.default.static('docs'));

  // Add mod instance.
  if (typeof fn === 'function') {
    fn(app);
  } else if (fn && typeof fn.default === 'function') {
    fn.default(app);
  }

  return app;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBUXdCLEc7O0FBUnhCOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUdlLFNBQVMsR0FBVCxDQUFhLEVBQWIsRUFBaUIsR0FBakIsRUFBc0I7QUFDbkM7QUFDQSxNQUFNLE1BQU0sd0JBQVo7O0FBRUE7QUFDQSxNQUFJLEVBQUosRUFBUSwwQkFBVyxHQUFHLFVBQWQsRUFBMEIsR0FBMUI7O0FBRVI7QUFDQSxNQUFNLE1BQU0sc0JBQU8sSUFBSSxPQUFYLENBQVo7QUFDQSxNQUFJLEdBQUosQ0FBUSxzQkFBTyxVQUFQLEVBQW1CLEVBQUUsUUFBUSxJQUFJLE1BQWQsRUFBbkIsQ0FBUjtBQUNBLE1BQUksR0FBSixHQUFVLElBQUksTUFBZCxDQVZtQyxDQVVaOztBQUV2QjtBQUNBLE1BQU0sU0FBUyxvQkFBSyxJQUFJLElBQVQsQ0FBZjtBQUNBLE1BQUksR0FBSixDQUFRLE9BQU8sSUFBZjs7QUFFQTtBQUNBLE1BQUksR0FBSixDQUFRLGVBQVIsRUFBeUIsVUFBQyxHQUFELEVBQU0sR0FBTixFQUFjO0FBQUUsUUFBSSxJQUFKLENBQVMsU0FBVDtBQUFzQixHQUEvRDs7QUFFQTtBQUNBLE1BQUksR0FBSixDQUFRLE9BQVIsRUFBaUIsa0JBQVEsTUFBUixDQUFlLE1BQWYsQ0FBakI7O0FBRUE7QUFDQSxNQUFJLE9BQU8sRUFBUCxLQUFjLFVBQWxCLEVBQThCO0FBQzVCLE9BQUcsR0FBSDtBQUNELEdBRkQsTUFFTyxJQUFJLE1BQU0sT0FBTyxHQUFHLE9BQVYsS0FBc0IsVUFBaEMsRUFBNEM7QUFDakQsT0FBRyxPQUFILENBQVcsR0FBWDtBQUNEOztBQUVELFNBQU8sR0FBUDtBQUNEIiwiZmlsZSI6ImNvcmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBtb3JnYW4gZnJvbSAnbW9yZ2FuJztcblxuaW1wb3J0IGxvZ2dlciBmcm9tICcuL2xvZ2dlcic7XG5pbXBvcnQgY29ycyBmcm9tICcuL2NvcnMnO1xuaW1wb3J0IG1pZGRsZXdhcmUgZnJvbSAnLi9taWRkbGV3YXJlJztcblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzcnYoZm4sIG9wdCkge1xuICAvLyBFeHByZXNzIGFwcC5cbiAgY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG4gIC8vIEhvb2sgaW4gbWlkZGxld2FyZSBpZiBwcm92aWRlZCBleHBvcnQuXG4gIGlmIChmbikgbWlkZGxld2FyZShmbi5taWRkbGV3YXJlLCBhcHApO1xuXG4gIC8vIFdpbnN0b24gbG9nZ2luZy5cbiAgY29uc3QgbG9nID0gbG9nZ2VyKG9wdC5sb2dnaW5nKTtcbiAgYXBwLnVzZShtb3JnYW4oJ2NvbWJpbmVkJywgeyBzdHJlYW06IGxvZy5zdHJlYW0gfSkpO1xuICBhcHAubG9nID0gbG9nLmxvZ2dlcjsgIC8vIEFkZCB0byBleHByZXNzIGFwcCBjb250ZXh0LlxuXG4gIC8vIENPUlMgcnVsZXMuXG4gIGNvbnN0IG9yaWdpbiA9IGNvcnMob3B0LmNvcnMpO1xuICBhcHAudXNlKG9yaWdpbi5jb3JzKTtcblxuICAvLyBCYXNlIHJvdXRlcy5cbiAgYXBwLmdldCgnL2hlYWx0aC1jaGVjaycsIChyZXEsIHJlcykgPT4geyByZXMuc2VuZCgnSFRUUCBPSycpOyB9KTtcblxuICAvLyBTdGF0aWMgRG9jdW1lbnRhdGlvbi5cbiAgYXBwLnVzZSgnL2RvY3MnLCBleHByZXNzLnN0YXRpYygnZG9jcycpKTtcblxuICAvLyBBZGQgbW9kIGluc3RhbmNlLlxuICBpZiAodHlwZW9mIGZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZm4oYXBwKTtcbiAgfSBlbHNlIGlmIChmbiAmJiB0eXBlb2YgZm4uZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZuLmRlZmF1bHQoYXBwKTtcbiAgfVxuXG4gIHJldHVybiBhcHA7XG59XG4iXX0=